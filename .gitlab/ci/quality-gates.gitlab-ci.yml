.lint_template: &lint_definition
  stage: quality gates
  image: ${CI_REGISTRY_IMAGE}
  interruptible: true

clang-tidy:
  <<: *lint_definition
  variables:
    CODACY_URL: https://api.codacy.com
    CODACY_CLANG_TIDY_VERSION: 1.2.1
  before_script:
    - wget --continue https://github.com/codacy/codacy-clang-tidy/releases/download/${CODACY_CLANG_TIDY_VERSION}/codacy-clang-tidy-${CODACY_CLANG_TIDY_VERSION}
    - chmod +x codacy-clang-tidy-${CODACY_CLANG_TIDY_VERSION}
  script:
    - run-clang-tidy -p=build | ./.gitlab/scripts/codacy_send_results.sh
  dependencies: [ ]

lcov:
  <<: *lint_definition
  before_script:
    - export CXXFLAGS="-g -O0 --coverage"
    - environment/clean_build_project.sh
    - build/bin/leetcode-solutions-tests
  script:
    - lcov --no-external --capture --directory=. --output-file=${CI_JOB_NAME}.info
  after_script:
    - bash <(curl -Ls https://coverage.codacy.com/get.sh) report --coverage-reports ${CI_JOB_NAME}.info
    - genhtml ${CI_JOB_NAME}.info --output-directory ${CI_JOB_NAME}-output
  artifacts:
    name: ${CI_JOB_NAME}
    paths:
      - ${CI_JOB_NAME}-output
  dependencies: [ ]

clang-format:
  <<: *lint_definition
  script:
    - find . -name '*.cpp' | xargs clang-format --dry-run --verbose
  dependencies: [ ]

valgrind:
  <<: *lint_definition
  script:
    - valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --verbose build/bin/leetcode-solutions-tests
